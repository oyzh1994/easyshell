name: Macos_arm64

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-15

    steps:

      - name: 检出项目
        uses: actions/checkout@v4
        
      - name: 下载工具包
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          echo "SDKMAN_DIR=$HOME/.sdkman" >> $GITHUB_ENV
          echo "$HOME/.sdkman/bin" >> $GITHUB_PATH
          
      - name: 下载jdk
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install java 25.ea.36-open
          sdk use java 25.ea.36-open
          java -version

      - name:  处理前置依赖
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
           # 处理base依赖
          git clone --depth 1 --branch v1.0.2  https://github.com/oyzh1994/base.git
          cd base
          mvn clean install -DskipTests
          cd ..
          rm -rf base
          
          # 处理fx-base依赖
          git clone --depth 1 --branch v1.3.5 https://github.com/oyzh1994/fx-base.git
          cd fx-base
          mvn clean install -DskipTests
          cd ..
          rm -rf fx-base

      - name: 打包项目Jar
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          mvn -X clean package -DskipTests

      - name: 执行jlink生成运行时
        run: |
          # 确保SDKMAN环境变量被正确加载
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          # 执行jlink命令
          jlink \
          --verbose \
          --vm=server \
          --compress=2 \
          --strip-debug \
          --no-man-pages \
          --no-header-files \
          --output runtime_jre \
          --strip-java-debug-attributes \
          --exclude-files=**.md,**LICENSE,**COPYRIGHT,**classlist,**README.txt,**sound.properties,**ASSEMBLY_EXCEPTION,**ADDITIONAL_LICENSE_INFO \
          --add-modules java.xml,java.rmi,java.sql,java.base,java.naming,java.logging,java.desktop,java.scripting,java.management,java.datatransfer,java.security.jgss,jdk.unsupported,jdk.jdi,java.transaction.xa,java.instrument,jdk.net,java.compiler,jdk.attach \

      - name: 打包pkg
        run: |
          # 确保SDKMAN环境变量被正确加载
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          # 动态查找JAR包文件
          # -name "*.jar" 匹配所有以 .jar 结尾的文件
          # -print -quit 找到第一个匹配的文件后立即退出
          JAR_FILE=$(find target -name "*.jar" -print -quit)
          # 创建app目录
          mkdir target/app
          # 移动jar到app目录
          mv "$JAR_FILE" target/app
          # 重新定位jar
          JAR_FILE=$(find target/app -name "*.jar" -print -quit)
          # 提取JAR文件名，例如 easyshell-1.1.0.jar
          JAR_NAME=$(basename "$JAR_FILE")
          # 检查JAR文件是否找到
          if [ -z "$JAR_FILE" ]; then
          echo "Error: Main JAR file not found in target directory."
          exit 1
          fi
          
          APP_NAME=$(mvn help:evaluate -Dexpression=project.name -q -DforceStdout)
          APP_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          APP_DESCRIPTION=$(mvn help:evaluate -Dexpression=project.description -q -DforceStdout)
          echo "JAR file: $JAR_FILE"
          echo "APP_NAME: $APP_NAME"
          echo "APP_VERSION: $APP_VERSION"
          echo "APP_DESCRIPTION: $APP_DESCRIPTION"
          
          # 执行jpackage命令
          jpackage \
            --verbose \
            --type pkg \
            --dest dist \
            --vendor "oyzh" \
            --input target/app \
            --name "$APP_NAME" \
            --main-jar "$JAR_NAME" \
            --app-version "$APP_VERSION" \
            --description "$APP_DESCRIPTION" \
            --icon resource/app.icns \
            --runtime-image runtime_jre \
            --java-options -Xmx2G \
            --java-options -Xms32m \
            --java-options -Xshare:off \
            --java-options -XX:+UseZGC \
            --java-options -XX:+UseCompactObjectHeaders \
            --mac-package-identifier cn.oyzh.easyshell \

      - name: 显示项目结构
        run: |
          brew install tree
          echo "--- 项目目录结构 ---"
          tree -L 3
          
      - name: 列举生成的构建物
        run: ls -lh dist

      - name: 上传构建物
        uses: actions/upload-artifact@v4
        with:
          name: easyshell-pkg
          path: dist/*.pkg
