<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>cn.oyzh</groupId>
        <artifactId>fx-base</artifactId>
        <version>1.3.4</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>easyshell</artifactId>
    <version>1.0.4</version>
    <description>这是一个使用javafx编写的ssh客户端，支持基本的连接管理，分组管理、ssh连接、sftp文件管理、docker管理、x11转发(需要安装第三方x-server)、服务监控、本地终端等功能，支持linux和macos远程，还支持暗色主题、系统主题跟随等能力</description>

    <properties>
        <jna.version>5.17.0</jna.version>
        <pty4j.version>0.13.2</pty4j.version>
        <annotations.version>26.0.2</annotations.version>
        <purejavacomm.version>0.0.11.1</purejavacomm.version>
        <kotlin.stdlib.version>2.1.20</kotlin.stdlib.version>
        <checkstyle.plugin.skip>true</checkstyle.plugin.skip>
        <jSerialComm.version>2.11.0</jSerialComm.version>
    </properties>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk18on -->
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk18on</artifactId>
            <version>${bouncycastle.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk18on -->
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk18on</artifactId>
            <version>${bouncycastle.version}</version>
        </dependency>

        <!-- 内存数据库 -->
        <!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
        </dependency>

        <dependency>
            <groupId>cn.oyzh</groupId>
            <artifactId>ssh</artifactId>
        </dependency>

        <dependency>
            <groupId>cn.oyzh</groupId>
            <artifactId>fx-gui</artifactId>
        </dependency>

        <dependency>
            <groupId>cn.oyzh</groupId>
            <artifactId>fx-rich</artifactId>
        </dependency>

        <!-- json类库 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
            <scope>compile</scope>
        </dependency>

        <!--### JNA ###-->
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>${jna.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna-platform</artifactId>
            <version>${jna.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!--### JetBrains ###-->
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>${annotations.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.pty4j</groupId>
            <artifactId>pty4j</artifactId>
            <version>${pty4j.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.stdlib.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.pty4j</groupId>
            <artifactId>purejavacomm</artifactId>
            <version>${purejavacomm.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- fx打包 -->
        <dependency>
            <groupId>cn.oyzh</groupId>
            <artifactId>fx-pkg</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.fusesource.jansi</groupId>
            <artifactId>jansi</artifactId>
            <version>2.4.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- 串口通讯实现  -->
        <dependency>
            <groupId>com.fazecast</groupId>
            <artifactId>jSerialComm</artifactId>
            <version>${jSerialComm.version}</version>
        </dependency>

        <!--        &lt;!&ndash;### LOGGING ###&ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.slf4j</groupId>-->
<!--            <artifactId>slf4j-api</artifactId>-->
<!--            <version>${slf4j.version}</version>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.apache.logging.log4j</groupId>-->
<!--            <artifactId>log4j-api</artifactId>-->
<!--            <version>${log4j.version}</version>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.apache.logging.log4j</groupId>-->
<!--            <artifactId>log4j-core</artifactId>-->
<!--            <version>${log4j.version}</version>-->
<!--        </dependency>-->
<!--        &lt;!&ndash; To route SLF4j to Log4j  &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.apache.logging.log4j</groupId>-->
<!--            <artifactId>log4j-slf4j2-impl</artifactId>-->
<!--            <version>${log4j.version}</version>-->
<!--        </dependency>-->
<!--        &lt;!&ndash;-->
<!--            To route JUL to Log4j (without sending them to SLF4J bridge) use log4j-jul-->
<!--            and -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager . For details see-->
<!--            http://logging.apache.org/log4j/2.x/faq.html#which_jars-->
<!--        &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.apache.logging.log4j</groupId>-->
<!--            <artifactId>log4j-jul</artifactId>-->
<!--            <version>${log4j.version}</version>-->
<!--        </dependency>-->
<!--        &lt;!&ndash; To route Apache Commons Logging (JCL) to Log4j  &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.apache.logging.log4j</groupId>-->
<!--            <artifactId>log4j-jcl</artifactId>-->
<!--            <version>${log4j.version}</version>-->
<!--        </dependency>-->
    </dependencies>

    <build>
        <plugins>
            <!-- 资源插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- Spring Boot打包相关 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.7.18</version>
                <configuration>
                    <mainClass>cn.oyzh.easyshell.EasyShellBootstrap</mainClass>
                    <excludes>
<!--                        <exclude>-->
<!--                            <groupId>org.projectlombok</groupId>-->
<!--                            <artifactId>lombok</artifactId>-->
<!--                        </exclude>-->
                        <exclude>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-jarmode-layertools</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
